{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "75998c0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "8b61fbb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn  as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "d23b78e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Для начала загрузим наш датасет в Jupyter Notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "816f268f",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents=pd.read_csv('/Users/agamagomedova/Downloads/House_Rent_Dataset-2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "5a78751a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Выведем весь загруженный датасет для того, чтобы быстрого первого взгляда на данные."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "e72e6523",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Posted On</th>\n",
       "      <th>BHK</th>\n",
       "      <th>Rent</th>\n",
       "      <th>Size</th>\n",
       "      <th>Floor</th>\n",
       "      <th>Area Type</th>\n",
       "      <th>Area Locality</th>\n",
       "      <th>City</th>\n",
       "      <th>Furnishing Status</th>\n",
       "      <th>Tenant Preferred</th>\n",
       "      <th>Bathroom</th>\n",
       "      <th>Point of Contact</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1100</td>\n",
       "      <td>Ground out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandel</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-05-13</td>\n",
       "      <td>2</td>\n",
       "      <td>20000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Phool Bagan, Kankurgachi</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-05-16</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Salt Lake City Sector 2</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-04</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Dumdum Park</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-05-09</td>\n",
       "      <td>2</td>\n",
       "      <td>7500</td>\n",
       "      <td>850</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>South Dum Dum</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4741</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Bandam Kommu</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4742</th>\n",
       "      <td>2022-05-15</td>\n",
       "      <td>3</td>\n",
       "      <td>29000</td>\n",
       "      <td>2000</td>\n",
       "      <td>1 out of 4</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Manikonda, Hyderabad</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4743</th>\n",
       "      <td>2022-07-10</td>\n",
       "      <td>3</td>\n",
       "      <td>35000</td>\n",
       "      <td>1750</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Himayath Nagar, NH 7</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4744</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>3</td>\n",
       "      <td>45000</td>\n",
       "      <td>1500</td>\n",
       "      <td>23 out of 34</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Gachibowli</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4745</th>\n",
       "      <td>2022-05-04</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>4 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Suchitra Circle</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4746 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Posted On  BHK   Rent  Size            Floor    Area Type  \\\n",
       "0     2022-05-18    2  10000  1100  Ground out of 2   Super Area   \n",
       "1     2022-05-13    2  20000   800       1 out of 3   Super Area   \n",
       "2     2022-05-16    2  17000  1000       1 out of 3   Super Area   \n",
       "3     2022-07-04    2  10000   800       1 out of 2   Super Area   \n",
       "4     2022-05-09    2   7500   850       1 out of 2  Carpet Area   \n",
       "...          ...  ...    ...   ...              ...          ...   \n",
       "4741  2022-05-18    2  15000  1000       3 out of 5  Carpet Area   \n",
       "4742  2022-05-15    3  29000  2000       1 out of 4   Super Area   \n",
       "4743  2022-07-10    3  35000  1750       3 out of 5  Carpet Area   \n",
       "4744  2022-07-06    3  45000  1500     23 out of 34  Carpet Area   \n",
       "4745  2022-05-04    2  15000  1000       4 out of 5  Carpet Area   \n",
       "\n",
       "                 Area Locality       City Furnishing Status  Tenant Preferred  \\\n",
       "0                       Bandel    Kolkata       Unfurnished  Bachelors/Family   \n",
       "1     Phool Bagan, Kankurgachi    Kolkata    Semi-Furnished  Bachelors/Family   \n",
       "2      Salt Lake City Sector 2    Kolkata    Semi-Furnished  Bachelors/Family   \n",
       "3                  Dumdum Park    Kolkata       Unfurnished  Bachelors/Family   \n",
       "4                South Dum Dum    Kolkata       Unfurnished         Bachelors   \n",
       "...                        ...        ...               ...               ...   \n",
       "4741              Bandam Kommu  Hyderabad    Semi-Furnished  Bachelors/Family   \n",
       "4742      Manikonda, Hyderabad  Hyderabad    Semi-Furnished  Bachelors/Family   \n",
       "4743      Himayath Nagar, NH 7  Hyderabad    Semi-Furnished  Bachelors/Family   \n",
       "4744                Gachibowli  Hyderabad    Semi-Furnished            Family   \n",
       "4745           Suchitra Circle  Hyderabad       Unfurnished         Bachelors   \n",
       "\n",
       "      Bathroom Point of Contact  \n",
       "0            2    Contact Owner  \n",
       "1            1    Contact Owner  \n",
       "2            1    Contact Owner  \n",
       "3            1    Contact Owner  \n",
       "4            1    Contact Owner  \n",
       "...        ...              ...  \n",
       "4741         2    Contact Owner  \n",
       "4742         3    Contact Owner  \n",
       "4743         3    Contact Agent  \n",
       "4744         2    Contact Agent  \n",
       "4745         2    Contact Owner  \n",
       "\n",
       "[4746 rows x 12 columns]"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "3389e2e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Узнаем размер датасета."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "0843ca14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4746, 12)"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "8f6561b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим основную информацию по данным."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "5616dba3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4746 entries, 0 to 4745\n",
      "Data columns (total 12 columns):\n",
      " #   Column             Non-Null Count  Dtype \n",
      "---  ------             --------------  ----- \n",
      " 0   Posted On          4746 non-null   object\n",
      " 1   BHK                4746 non-null   int64 \n",
      " 2   Rent               4746 non-null   int64 \n",
      " 3   Size               4746 non-null   int64 \n",
      " 4   Floor              4746 non-null   object\n",
      " 5   Area Type          4746 non-null   object\n",
      " 6   Area Locality      4746 non-null   object\n",
      " 7   City               4746 non-null   object\n",
      " 8   Furnishing Status  4746 non-null   object\n",
      " 9   Tenant Preferred   4746 non-null   object\n",
      " 10  Bathroom           4746 non-null   int64 \n",
      " 11  Point of Contact   4746 non-null   object\n",
      "dtypes: int64(4), object(8)\n",
      "memory usage: 445.1+ KB\n"
     ]
    }
   ],
   "source": [
    "rents.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "7a267d07",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы видим, в датасете 12 колонок. Пустых значений не наблюдается, в каждой колонке заполнены все 4746 строки.\n",
    "# В датасете присутствуют два типа переменных - вещественные (integer) и категориальные (object)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "e3f89348",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Переименуем колонки в датасете для нашего удобства и выведем первые и последние 10 строк обновленного датасета."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "0e6dcc07",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents.rename(columns = {'Posted On' : 'date', 'BHK' : 'rooms', 'Rent' : 'price', 'Size' : 'size',\n",
    "                       'Floor' : 'floor', 'Area Type' : 'area', 'Area Locality' : 'location', \n",
    "                       'City' : 'city', 'Furnishing Status' : 'furniture', \n",
    "                       'Tenant Preferred' : 'tenant', 'Bathroom' : 'bathroom',\n",
    "                       'Point of Contact' : 'contact'}, inplace = True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "56afd016",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1100</td>\n",
       "      <td>Ground out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandel</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-05-13</td>\n",
       "      <td>2</td>\n",
       "      <td>20000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Phool Bagan, Kankurgachi</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-05-16</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Salt Lake City Sector 2</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-04</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Dumdum Park</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-05-09</td>\n",
       "      <td>2</td>\n",
       "      <td>7500</td>\n",
       "      <td>850</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>South Dum Dum</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2022-04-29</td>\n",
       "      <td>2</td>\n",
       "      <td>7000</td>\n",
       "      <td>600</td>\n",
       "      <td>Ground out of 1</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Thakurpukur</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2022-06-21</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>700</td>\n",
       "      <td>Ground out of 4</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Malancha</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2022-06-21</td>\n",
       "      <td>1</td>\n",
       "      <td>5000</td>\n",
       "      <td>250</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Malancha</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2022-06-07</td>\n",
       "      <td>2</td>\n",
       "      <td>26000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Palm Avenue Kolkata, Ballygunge</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2022-06-20</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Natunhat</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  rooms  price  size            floor         area  \\\n",
       "0  2022-05-18      2  10000  1100  Ground out of 2   Super Area   \n",
       "1  2022-05-13      2  20000   800       1 out of 3   Super Area   \n",
       "2  2022-05-16      2  17000  1000       1 out of 3   Super Area   \n",
       "3  2022-07-04      2  10000   800       1 out of 2   Super Area   \n",
       "4  2022-05-09      2   7500   850       1 out of 2  Carpet Area   \n",
       "5  2022-04-29      2   7000   600  Ground out of 1   Super Area   \n",
       "6  2022-06-21      2  10000   700  Ground out of 4   Super Area   \n",
       "7  2022-06-21      1   5000   250       1 out of 2   Super Area   \n",
       "8  2022-06-07      2  26000   800       1 out of 2  Carpet Area   \n",
       "9  2022-06-20      2  10000  1000       1 out of 3  Carpet Area   \n",
       "\n",
       "                          location     city       furniture            tenant  \\\n",
       "0                           Bandel  Kolkata     Unfurnished  Bachelors/Family   \n",
       "1         Phool Bagan, Kankurgachi  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "2          Salt Lake City Sector 2  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "3                      Dumdum Park  Kolkata     Unfurnished  Bachelors/Family   \n",
       "4                    South Dum Dum  Kolkata     Unfurnished         Bachelors   \n",
       "5                      Thakurpukur  Kolkata     Unfurnished  Bachelors/Family   \n",
       "6                         Malancha  Kolkata     Unfurnished         Bachelors   \n",
       "7                         Malancha  Kolkata     Unfurnished         Bachelors   \n",
       "8  Palm Avenue Kolkata, Ballygunge  Kolkata     Unfurnished         Bachelors   \n",
       "9                         Natunhat  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "\n",
       "   bathroom        contact  \n",
       "0         2  Contact Owner  \n",
       "1         1  Contact Owner  \n",
       "2         1  Contact Owner  \n",
       "3         1  Contact Owner  \n",
       "4         1  Contact Owner  \n",
       "5         2  Contact Owner  \n",
       "6         2  Contact Agent  \n",
       "7         1  Contact Agent  \n",
       "8         2  Contact Agent  \n",
       "9         2  Contact Owner  "
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "e74cecff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4736</th>\n",
       "      <td>2022-06-28</td>\n",
       "      <td>3</td>\n",
       "      <td>15000</td>\n",
       "      <td>1500</td>\n",
       "      <td>Lower Basement out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Almasguda</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4737</th>\n",
       "      <td>2022-07-07</td>\n",
       "      <td>3</td>\n",
       "      <td>15000</td>\n",
       "      <td>1500</td>\n",
       "      <td>Lower Basement out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Almasguda</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4738</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>855</td>\n",
       "      <td>4 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Godavari Homes, Quthbullapur</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4739</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>2</td>\n",
       "      <td>25000</td>\n",
       "      <td>1040</td>\n",
       "      <td>2 out of 4</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Gachibowli</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4740</th>\n",
       "      <td>2022-06-02</td>\n",
       "      <td>2</td>\n",
       "      <td>12000</td>\n",
       "      <td>1350</td>\n",
       "      <td>2 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Old Alwal</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4741</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Bandam Kommu</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4742</th>\n",
       "      <td>2022-05-15</td>\n",
       "      <td>3</td>\n",
       "      <td>29000</td>\n",
       "      <td>2000</td>\n",
       "      <td>1 out of 4</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Manikonda, Hyderabad</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4743</th>\n",
       "      <td>2022-07-10</td>\n",
       "      <td>3</td>\n",
       "      <td>35000</td>\n",
       "      <td>1750</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Himayath Nagar, NH 7</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4744</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>3</td>\n",
       "      <td>45000</td>\n",
       "      <td>1500</td>\n",
       "      <td>23 out of 34</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Gachibowli</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4745</th>\n",
       "      <td>2022-05-04</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>4 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Suchitra Circle</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  rooms  price  size                    floor         area  \\\n",
       "4736  2022-06-28      3  15000  1500  Lower Basement out of 2   Super Area   \n",
       "4737  2022-07-07      3  15000  1500  Lower Basement out of 2   Super Area   \n",
       "4738  2022-07-06      2  17000   855               4 out of 5  Carpet Area   \n",
       "4739  2022-07-06      2  25000  1040               2 out of 4  Carpet Area   \n",
       "4740  2022-06-02      2  12000  1350               2 out of 2   Super Area   \n",
       "4741  2022-05-18      2  15000  1000               3 out of 5  Carpet Area   \n",
       "4742  2022-05-15      3  29000  2000               1 out of 4   Super Area   \n",
       "4743  2022-07-10      3  35000  1750               3 out of 5  Carpet Area   \n",
       "4744  2022-07-06      3  45000  1500             23 out of 34  Carpet Area   \n",
       "4745  2022-05-04      2  15000  1000               4 out of 5  Carpet Area   \n",
       "\n",
       "                          location       city       furniture  \\\n",
       "4736                     Almasguda  Hyderabad  Semi-Furnished   \n",
       "4737                     Almasguda  Hyderabad  Semi-Furnished   \n",
       "4738  Godavari Homes, Quthbullapur  Hyderabad     Unfurnished   \n",
       "4739                    Gachibowli  Hyderabad     Unfurnished   \n",
       "4740                     Old Alwal  Hyderabad     Unfurnished   \n",
       "4741                  Bandam Kommu  Hyderabad  Semi-Furnished   \n",
       "4742          Manikonda, Hyderabad  Hyderabad  Semi-Furnished   \n",
       "4743          Himayath Nagar, NH 7  Hyderabad  Semi-Furnished   \n",
       "4744                    Gachibowli  Hyderabad  Semi-Furnished   \n",
       "4745               Suchitra Circle  Hyderabad     Unfurnished   \n",
       "\n",
       "                tenant  bathroom        contact  \n",
       "4736            Family         3  Contact Owner  \n",
       "4737  Bachelors/Family         3  Contact Owner  \n",
       "4738         Bachelors         2  Contact Agent  \n",
       "4739         Bachelors         2  Contact Owner  \n",
       "4740  Bachelors/Family         2  Contact Owner  \n",
       "4741  Bachelors/Family         2  Contact Owner  \n",
       "4742  Bachelors/Family         3  Contact Owner  \n",
       "4743  Bachelors/Family         3  Contact Agent  \n",
       "4744            Family         2  Contact Agent  \n",
       "4745         Bachelors         2  Contact Owner  "
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "60b2425b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на данные в разрезе основных показателей - городов, количества комнат в квартире, цен на аренду, \n",
    "# хозяев квартир, наличия мебели, количества ванных комнат и района квартиры. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "5dd63913",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mumbai       972\n",
       "Chennai      891\n",
       "Bangalore    886\n",
       "Hyderabad    868\n",
       "Delhi        605\n",
       "Kolkata      524\n",
       "Name: city, dtype: int64"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.city.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "e65b59e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15000    275\n",
       "10000    248\n",
       "12000    238\n",
       "20000    175\n",
       "8000     162\n",
       "        ... \n",
       "4600       1\n",
       "79500      1\n",
       "76000      1\n",
       "45002      1\n",
       "5800       1\n",
       "Name: price, Length: 243, dtype: int64"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "e691b7c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    2265\n",
       "1    1167\n",
       "3    1098\n",
       "4     189\n",
       "5      19\n",
       "6       8\n",
       "Name: rooms, dtype: int64"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.rooms.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "ea3df1bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 3, 6, 4, 5])"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.rooms.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "6a86ea8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Bachelors/Family    3444\n",
       "Bachelors            830\n",
       "Family               472\n",
       "Name: tenant, dtype: int64"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.tenant.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "61a6af2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Semi-Furnished    2251\n",
       "Unfurnished       1815\n",
       "Furnished          680\n",
       "Name: furniture, dtype: int64"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.furniture.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "8f770838",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2     2291\n",
       "1     1474\n",
       "3      749\n",
       "4      156\n",
       "5       60\n",
       "6       12\n",
       "7        3\n",
       "10       1\n",
       "Name: bathroom, dtype: int64"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.bathroom.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "57b38524",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Super Area     2446\n",
       "Carpet Area    2298\n",
       "Built Area        2\n",
       "Name: area, dtype: int64"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.area.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "d4db78fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "# В рамках первичного анализа можно отметить, что больше всего квартир арендовали в Мумбаях, самое спросовое \n",
    "# количество комнат - 2, самое распространенная характеристика хозяев - одинокие или семейные люди, большее\n",
    "# число квартир было полуобставлены мебелью, самым популярным вариантом были квартиры с 2 ванными комнатами,\n",
    "# а также наибольшей популярностью пользовались районы типа Super Area."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "cf1b4dcd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Далее убедимся еще раз, что в датасете отсутствуют пропуски в данных."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "6650d083",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "1dc69ba9",
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "f46daa75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rents.isna().sum().plot(kind = 'bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "3e091dea",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Так, мы видим, что во всех 12 столбцах пропусков нет. Проверим полноту данных также через missingno."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "bf7d4539",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: missingno in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (0.5.1)\n",
      "Requirement already satisfied: numpy in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from missingno) (1.21.5)\n",
      "Requirement already satisfied: seaborn in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from missingno) (0.11.2)\n",
      "Requirement already satisfied: scipy in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from missingno) (1.7.3)\n",
      "Requirement already satisfied: matplotlib in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from missingno) (3.5.1)\n",
      "Requirement already satisfied: pyparsing>=2.2.1 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (3.0.4)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (1.3.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (2.8.2)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (4.25.0)\n",
      "Requirement already satisfied: cycler>=0.10 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (0.11.0)\n",
      "Requirement already satisfied: pillow>=6.2.0 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (9.0.1)\n",
      "Requirement already satisfied: packaging>=20.0 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from matplotlib->missingno) (21.3)\n",
      "Requirement already satisfied: six>=1.5 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib->missingno) (1.16.0)\n",
      "Requirement already satisfied: pandas>=0.23 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from seaborn->missingno) (1.4.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in /Users/agamagomedova/opt/anaconda3/lib/python3.9/site-packages (from pandas>=0.23->seaborn->missingno) (2021.3)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install missingno"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "faae3864",
   "metadata": {},
   "outputs": [],
   "source": [
    "import missingno as msn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "cc107848",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "msn.bar(rents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "57c6823a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы дважды убедились, в нашем датасете отсутствуют пропуски."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "b4164f85",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на описательную статистику нашего датасета. Начнем с количественных переменных."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "aa07bf91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>bathroom</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4746.000000</td>\n",
       "      <td>4.746000e+03</td>\n",
       "      <td>4746.000000</td>\n",
       "      <td>4746.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.083860</td>\n",
       "      <td>3.499345e+04</td>\n",
       "      <td>967.490729</td>\n",
       "      <td>1.965866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.832256</td>\n",
       "      <td>7.810641e+04</td>\n",
       "      <td>634.202328</td>\n",
       "      <td>0.884532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.200000e+03</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000e+04</td>\n",
       "      <td>550.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.600000e+04</td>\n",
       "      <td>850.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.300000e+04</td>\n",
       "      <td>1200.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>6.000000</td>\n",
       "      <td>3.500000e+06</td>\n",
       "      <td>8000.000000</td>\n",
       "      <td>10.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             rooms         price         size     bathroom\n",
       "count  4746.000000  4.746000e+03  4746.000000  4746.000000\n",
       "mean      2.083860  3.499345e+04   967.490729     1.965866\n",
       "std       0.832256  7.810641e+04   634.202328     0.884532\n",
       "min       1.000000  1.200000e+03    10.000000     1.000000\n",
       "25%       2.000000  1.000000e+04   550.000000     1.000000\n",
       "50%       2.000000  1.600000e+04   850.000000     2.000000\n",
       "75%       3.000000  3.300000e+04  1200.000000     2.000000\n",
       "max       6.000000  3.500000e+06  8000.000000    10.000000"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "0e792297",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Мы можем сделать следующие выводы:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "15e99a27",
   "metadata": {},
   "outputs": [],
   "source": [
    "# В плане количества комнат в квартире, среднее значение в нашей выборке - 2 комнаты, как и медиана.\n",
    "# Так, несмотря на разброс этого показателя от 1 до 6 комнат, среднее и медиана равны 2.\n",
    "# Можем сделать вывод, что в выборке много (половина) однокомнатных и двухкомнатных квартир, а другую половину\n",
    "# составляют 3-х, 4-х, 5-ти и 6-ти комнатные квартиры."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "3d2224dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Рассмотрим показатель цен на аренду жилья. \n",
    "# Как мы видим, средняя цена на аренду квартиры - 35000 INR, что в рублях составляет около 26000 рублей в месяц. \n",
    "# Медиана, в свою очередь - 16000 INR.\n",
    "# Поскольку среднее значение больше медианы, можно сделать вывод, что в плане цены перед нами распределение с\n",
    "# положительной ассиметрией."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "9c747de2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd2e5deae20>]"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(rents.price, linewidth=2.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "272be8bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на распределение цен на квартиры - как мы видим, это действительно распределение с положительной\n",
    "# ассиметрией. Мы можем наблюдать некоторые выбросы - дорогие и очень дорогие квартиры. \n",
    "# Разброс этого показателя в выборке - от 1200 до 3500000 INR. Для более привычного восприятия, переведем значения\n",
    "# из индийских рупий в российские рубли."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "23320a56",
   "metadata": {},
   "outputs": [],
   "source": [
    "def currency_converter(rub):\n",
    "    return rub*0.75"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "f0e50ad6",
   "metadata": {},
   "outputs": [],
   "source": [
    "price = currency_converter(rents.price)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "4332b950",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     7500.0\n",
       "1    15000.0\n",
       "2    12750.0\n",
       "3     7500.0\n",
       "4     5625.0\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "price.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "4d2ba489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2625000.0"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "price.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "298f2481",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "900.0"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "price.min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "cfc3a72b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Таким образом, в датасете присутствуют квартиры в ценовом диапазоне аренды от 900 до 2 625 000 рублей."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "3674d9e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Заведем категориальную переменную, которая будет отображать ценовую категорию сдаваемой квартиры."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "f1a65787",
   "metadata": {},
   "outputs": [],
   "source": [
    "def rent_price_cat(price):\n",
    "    if price < 60000:\n",
    "        return 'Cheap'\n",
    "    elif price < 250000:\n",
    "        return 'Affordable'\n",
    "    elif price >= 250000:\n",
    "        return 'Expensive'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "276cb27f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       10000\n",
       "1       20000\n",
       "2       17000\n",
       "3       10000\n",
       "4        7500\n",
       "        ...  \n",
       "4741    15000\n",
       "4742    29000\n",
       "4743    35000\n",
       "4744    45000\n",
       "4745    15000\n",
       "Name: price, Length: 4746, dtype: int64"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "965507e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents['price type'] = rents.price.apply(rent_price_cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "77f2177f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "      <th>price type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1100</td>\n",
       "      <td>Ground out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandel</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-05-13</td>\n",
       "      <td>2</td>\n",
       "      <td>20000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Phool Bagan, Kankurgachi</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  rooms  price  size            floor        area  \\\n",
       "0  2022-05-18      2  10000  1100  Ground out of 2  Super Area   \n",
       "1  2022-05-13      2  20000   800       1 out of 3  Super Area   \n",
       "\n",
       "                   location     city       furniture            tenant  \\\n",
       "0                    Bandel  Kolkata     Unfurnished  Bachelors/Family   \n",
       "1  Phool Bagan, Kankurgachi  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "\n",
       "   bathroom        contact price type  \n",
       "0         2  Contact Owner      Cheap  \n",
       "1         1  Contact Owner      Cheap  "
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "48124a77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cheap         4124\n",
       "Affordable     537\n",
       "Expensive       85\n",
       "Name: price type, dtype: int64"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents['price type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "309c5bca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.87"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(4124/4746,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "bb596333",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы видим, в выборке больше квартир категории Cheap - 4317 из 4746. Это около 90% выборки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "b8b5fed6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на ценовую категорию квартир по типам района."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "db66d51b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "area         price type\n",
       "Built Area   Cheap            2\n",
       "Carpet Area  Cheap         1758\n",
       "             Affordable     463\n",
       "             Expensive       77\n",
       "Super Area   Cheap         2364\n",
       "             Affordable      74\n",
       "             Expensive        8\n",
       "Name: price type, dtype: int64"
      ]
     },
     "execution_count": 219,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.groupby('area')['price type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "b86e6735",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='area'>"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rents.groupby('area')['price type'].value_counts().unstack().plot(kind='bar', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "339e97df",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы видим, в районе типа Built Area в датасете представлены только 2 квартиры категории Cheap.\n",
    "# В районе типа Carpet Area находится большая часть дорогих квартир, также значительная часть Affordable квартир.\n",
    "# В Super Area районах преобладают квартиры категории Cheap."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "f2b71619",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Далее посмотрим, какие категории по мебели преобладают в каждом из типов районов.\n",
    "# Найдем моду в нашей категориальной переменной price type в разрезе area."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "id": "37dd91fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "area\n",
       "Built Area          Furnished\n",
       "Carpet Area    Semi-Furnished\n",
       "Super Area     Semi-Furnished\n",
       "Name: furniture, dtype: object"
      ]
     },
     "execution_count": 223,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.groupby('area')['furniture'].agg(lambda x: x.value_counts().index[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "bf2b3c26",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы видим, в Built районах преобладают обставленные мебелью квартиры.\n",
    "# В Carpet и Super - полуобставленные."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "161cd2f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Выведем сводную таблицу по ценам и плозади квартир датасета для каждого представленного города."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "9b0b13d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">mean</th>\n",
       "      <th colspan=\"2\" halign=\"left\">median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Bangalore</th>\n",
       "      <td>24966.365688</td>\n",
       "      <td>985.925508</td>\n",
       "      <td>14000</td>\n",
       "      <td>897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chennai</th>\n",
       "      <td>21614.092031</td>\n",
       "      <td>1031.713805</td>\n",
       "      <td>14000</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Delhi</th>\n",
       "      <td>29461.983471</td>\n",
       "      <td>786.406612</td>\n",
       "      <td>17000</td>\n",
       "      <td>600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hyderabad</th>\n",
       "      <td>20555.048387</td>\n",
       "      <td>1186.669355</td>\n",
       "      <td>14000</td>\n",
       "      <td>1100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kolkata</th>\n",
       "      <td>11645.173664</td>\n",
       "      <td>787.366412</td>\n",
       "      <td>8500</td>\n",
       "      <td>722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>85321.204733</td>\n",
       "      <td>905.904321</td>\n",
       "      <td>52000</td>\n",
       "      <td>750</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   mean              median      \n",
       "                  price         size  price  size\n",
       "city                                             \n",
       "Bangalore  24966.365688   985.925508  14000   897\n",
       "Chennai    21614.092031  1031.713805  14000   900\n",
       "Delhi      29461.983471   786.406612  17000   600\n",
       "Hyderabad  20555.048387  1186.669355  14000  1100\n",
       "Kolkata    11645.173664   787.366412   8500   722\n",
       "Mumbai     85321.204733   905.904321  52000   750"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.pivot_table(index = 'city', values = ['price', 'size'], aggfunc = ['mean', 'median'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "90d90264",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как видно по таблицы, самая высокая стоимость аренды характерна для квартир в Мумбаях."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "f3e2b0a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Предположим, заданы критерии \"хорошей\" квартиры - не меньше 4 комнат, не меньше 3 ванных комнат, \n",
    "# площадь квартиры не меньше 2000, плюс квартира полностью обставлены мебелью. \n",
    "# Посмотрим на выборку \"хороших\" квартир."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "id": "00cf1117",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30, 13)"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents[(rents['rooms']>= 4)&(rents['bathroom']>= 3)&(rents['rooms']>= 3)&(rents['size']>=2000)\n",
    "      &(rents['furniture']=='Furnished')].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "f9bc0bdf",
   "metadata": {},
   "outputs": [],
   "source": [
    "avg_good_rent = rents[(rents['rooms']>= 4)&(rents['bathroom']>= 3)&(rents['rooms']>= 3)&(rents['size']>=2000)\n",
    "      &(rents['furniture']=='Furnished')].price.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "31ad18e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "193425.0"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "currency_converter(avg_good_rent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "8382bbeb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Так, в нашем датасете 30 квартир, удовлетворяющих критериям \"хорошей\". А чтобы снять одну из таких квартир,\n",
    "# в среднем, нужно будет платить около 193 тыс. рублей аренды."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "id": "8eeef921",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Выведем описательную статистику для категориальных переменных."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "b9570ce9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>contact</th>\n",
       "      <th>price type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "      <td>4746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>81</td>\n",
       "      <td>480</td>\n",
       "      <td>3</td>\n",
       "      <td>2235</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandra West</td>\n",
       "      <td>Mumbai</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>311</td>\n",
       "      <td>379</td>\n",
       "      <td>2446</td>\n",
       "      <td>37</td>\n",
       "      <td>972</td>\n",
       "      <td>2251</td>\n",
       "      <td>3444</td>\n",
       "      <td>3216</td>\n",
       "      <td>4124</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              date       floor        area     location    city  \\\n",
       "count         4746        4746        4746         4746    4746   \n",
       "unique          81         480           3         2235       6   \n",
       "top     2022-07-06  1 out of 2  Super Area  Bandra West  Mumbai   \n",
       "freq           311         379        2446           37     972   \n",
       "\n",
       "             furniture            tenant        contact price type  \n",
       "count             4746              4746           4746       4746  \n",
       "unique               3                 3              3          3  \n",
       "top     Semi-Furnished  Bachelors/Family  Contact Owner      Cheap  \n",
       "freq              2251              3444           3216       4124  "
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.describe(include = 'object')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "id": "853a0858",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы видим, самая частая дата объявления о сдачи квартиры в датасете - 6 июля 2022 года.\n",
    "# Самый частый этаж в сдаваемых квартирах - первый из двух. Также, cамый частый вариант - полуобставленная \n",
    "# мебелью квартира, а самый популярный вариант связи с хозяином - напрямую."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "6c8426a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Говоря о варинтах связи с собственником квартиры, посмотрим, насколько популярны в выборке \n",
    "# услуги агентства недвижимости."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "id": "f59f58ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    3217\n",
       "1    1529\n",
       "Name: contact, dtype: int64"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.contact.apply(lambda x: 1 if x == 'Contact Agent' else 0).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "1496648f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.32"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(1529/4746,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "2e4fc1ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "# С вероятностью 32% съемщики будут общаться с собственником через агенство недвижимости."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "222792a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Сделаем некоторую визуализацию для содержательного анализа."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "c16b20bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "cityy = rents['city'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "id": "465a872e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='city'>"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cityy.plot.pie(autopct = '%1.0f%%', labeldistance = 1.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "id": "9c507e93",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0.5, '')]"
      ]
     },
     "execution_count": 272,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot=cityy.plot.barh(figsize=(20,10), stacked = True)\n",
    "plot.legend(bbox_to_anchor = (1,1))\n",
    "plot.set(ylabel = None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff90e128",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы наглядно посмотрели, самые популярные в датасете - Мумбаи, Ченнай и Бангалор."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0414b37e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Теперь рассчитаем z-оценку для нашего распределения цен на квартиры. Сначала для одного наблюдения."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "fa520bdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy.stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "e14ea7f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10000 34993.45132743363 78098.18384677787\n"
     ]
    }
   ],
   "source": [
    "x = rents.price[0]\n",
    "mean = rents.price.mean()\n",
    "std = rents.price.std(ddof=0)\n",
    "print(x, mean, std)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "cac990f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "z_score = (x-mean)/std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "2c51cc4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.3200260248877067"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "30e0950d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Наша z-оценка меньше нуля - действительно, первое наблюдение намного меньше среднего значения.\n",
    "# Теперь рассчитаем z-оценку для всей выборки цен."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "28bdab97",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents['zscore'] = scipy.stats.zscore(rents.price)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "4f0a8da9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "      <th>price type</th>\n",
       "      <th>zscore</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1100</td>\n",
       "      <td>Ground out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandel</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-05-13</td>\n",
       "      <td>2</td>\n",
       "      <td>20000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Phool Bagan, Kankurgachi</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.191982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-05-16</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Salt Lake City Sector 2</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.230395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-04</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Dumdum Park</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-05-09</td>\n",
       "      <td>2</td>\n",
       "      <td>7500</td>\n",
       "      <td>850</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>South Dum Dum</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.352037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2022-04-29</td>\n",
       "      <td>2</td>\n",
       "      <td>7000</td>\n",
       "      <td>600</td>\n",
       "      <td>Ground out of 1</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Thakurpukur</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.358439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2022-06-21</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>700</td>\n",
       "      <td>Ground out of 4</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Malancha</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2022-06-21</td>\n",
       "      <td>1</td>\n",
       "      <td>5000</td>\n",
       "      <td>250</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Malancha</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.384048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2022-06-07</td>\n",
       "      <td>2</td>\n",
       "      <td>26000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Palm Avenue Kolkata, Ballygunge</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.115156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2022-06-20</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Natunhat</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  rooms  price  size            floor         area  \\\n",
       "0  2022-05-18      2  10000  1100  Ground out of 2   Super Area   \n",
       "1  2022-05-13      2  20000   800       1 out of 3   Super Area   \n",
       "2  2022-05-16      2  17000  1000       1 out of 3   Super Area   \n",
       "3  2022-07-04      2  10000   800       1 out of 2   Super Area   \n",
       "4  2022-05-09      2   7500   850       1 out of 2  Carpet Area   \n",
       "5  2022-04-29      2   7000   600  Ground out of 1   Super Area   \n",
       "6  2022-06-21      2  10000   700  Ground out of 4   Super Area   \n",
       "7  2022-06-21      1   5000   250       1 out of 2   Super Area   \n",
       "8  2022-06-07      2  26000   800       1 out of 2  Carpet Area   \n",
       "9  2022-06-20      2  10000  1000       1 out of 3  Carpet Area   \n",
       "\n",
       "                          location     city       furniture            tenant  \\\n",
       "0                           Bandel  Kolkata     Unfurnished  Bachelors/Family   \n",
       "1         Phool Bagan, Kankurgachi  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "2          Salt Lake City Sector 2  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "3                      Dumdum Park  Kolkata     Unfurnished  Bachelors/Family   \n",
       "4                    South Dum Dum  Kolkata     Unfurnished         Bachelors   \n",
       "5                      Thakurpukur  Kolkata     Unfurnished  Bachelors/Family   \n",
       "6                         Malancha  Kolkata     Unfurnished         Bachelors   \n",
       "7                         Malancha  Kolkata     Unfurnished         Bachelors   \n",
       "8  Palm Avenue Kolkata, Ballygunge  Kolkata     Unfurnished         Bachelors   \n",
       "9                         Natunhat  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "\n",
       "   bathroom        contact price type    zscore  \n",
       "0         2  Contact Owner      Cheap -0.320026  \n",
       "1         1  Contact Owner      Cheap -0.191982  \n",
       "2         1  Contact Owner      Cheap -0.230395  \n",
       "3         1  Contact Owner      Cheap -0.320026  \n",
       "4         1  Contact Owner      Cheap -0.352037  \n",
       "5         2  Contact Owner      Cheap -0.358439  \n",
       "6         2  Contact Agent      Cheap -0.320026  \n",
       "7         1  Contact Agent      Cheap -0.384048  \n",
       "8         2  Contact Agent      Cheap -0.115156  \n",
       "9         2  Contact Owner      Cheap -0.320026  "
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "id": "73b4e35f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "      <th>price type</th>\n",
       "      <th>zscore</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4736</th>\n",
       "      <td>2022-06-28</td>\n",
       "      <td>3</td>\n",
       "      <td>15000</td>\n",
       "      <td>1500</td>\n",
       "      <td>Lower Basement out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Almasguda</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.256004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4737</th>\n",
       "      <td>2022-07-07</td>\n",
       "      <td>3</td>\n",
       "      <td>15000</td>\n",
       "      <td>1500</td>\n",
       "      <td>Lower Basement out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Almasguda</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.256004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4738</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>855</td>\n",
       "      <td>4 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Godavari Homes, Quthbullapur</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.230395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4739</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>2</td>\n",
       "      <td>25000</td>\n",
       "      <td>1040</td>\n",
       "      <td>2 out of 4</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Gachibowli</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.127960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4740</th>\n",
       "      <td>2022-06-02</td>\n",
       "      <td>2</td>\n",
       "      <td>12000</td>\n",
       "      <td>1350</td>\n",
       "      <td>2 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Old Alwal</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.294417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4741</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Bandam Kommu</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.256004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4742</th>\n",
       "      <td>2022-05-15</td>\n",
       "      <td>3</td>\n",
       "      <td>29000</td>\n",
       "      <td>2000</td>\n",
       "      <td>1 out of 4</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Manikonda, Hyderabad</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.076743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4743</th>\n",
       "      <td>2022-07-10</td>\n",
       "      <td>3</td>\n",
       "      <td>35000</td>\n",
       "      <td>1750</td>\n",
       "      <td>3 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Himayath Nagar, NH 7</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>3</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>0.000084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4744</th>\n",
       "      <td>2022-07-06</td>\n",
       "      <td>3</td>\n",
       "      <td>45000</td>\n",
       "      <td>1500</td>\n",
       "      <td>23 out of 34</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Gachibowli</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Agent</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>0.128128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4745</th>\n",
       "      <td>2022-05-04</td>\n",
       "      <td>2</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000</td>\n",
       "      <td>4 out of 5</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>Suchitra Circle</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.256004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  rooms  price  size                    floor         area  \\\n",
       "4736  2022-06-28      3  15000  1500  Lower Basement out of 2   Super Area   \n",
       "4737  2022-07-07      3  15000  1500  Lower Basement out of 2   Super Area   \n",
       "4738  2022-07-06      2  17000   855               4 out of 5  Carpet Area   \n",
       "4739  2022-07-06      2  25000  1040               2 out of 4  Carpet Area   \n",
       "4740  2022-06-02      2  12000  1350               2 out of 2   Super Area   \n",
       "4741  2022-05-18      2  15000  1000               3 out of 5  Carpet Area   \n",
       "4742  2022-05-15      3  29000  2000               1 out of 4   Super Area   \n",
       "4743  2022-07-10      3  35000  1750               3 out of 5  Carpet Area   \n",
       "4744  2022-07-06      3  45000  1500             23 out of 34  Carpet Area   \n",
       "4745  2022-05-04      2  15000  1000               4 out of 5  Carpet Area   \n",
       "\n",
       "                          location       city       furniture  \\\n",
       "4736                     Almasguda  Hyderabad  Semi-Furnished   \n",
       "4737                     Almasguda  Hyderabad  Semi-Furnished   \n",
       "4738  Godavari Homes, Quthbullapur  Hyderabad     Unfurnished   \n",
       "4739                    Gachibowli  Hyderabad     Unfurnished   \n",
       "4740                     Old Alwal  Hyderabad     Unfurnished   \n",
       "4741                  Bandam Kommu  Hyderabad  Semi-Furnished   \n",
       "4742          Manikonda, Hyderabad  Hyderabad  Semi-Furnished   \n",
       "4743          Himayath Nagar, NH 7  Hyderabad  Semi-Furnished   \n",
       "4744                    Gachibowli  Hyderabad  Semi-Furnished   \n",
       "4745               Suchitra Circle  Hyderabad     Unfurnished   \n",
       "\n",
       "                tenant  bathroom        contact price type    zscore  \n",
       "4736            Family         3  Contact Owner      Cheap -0.256004  \n",
       "4737  Bachelors/Family         3  Contact Owner      Cheap -0.256004  \n",
       "4738         Bachelors         2  Contact Agent      Cheap -0.230395  \n",
       "4739         Bachelors         2  Contact Owner      Cheap -0.127960  \n",
       "4740  Bachelors/Family         2  Contact Owner      Cheap -0.294417  \n",
       "4741  Bachelors/Family         2  Contact Owner      Cheap -0.256004  \n",
       "4742  Bachelors/Family         3  Contact Owner      Cheap -0.076743  \n",
       "4743  Bachelors/Family         3  Contact Agent      Cheap  0.000084  \n",
       "4744            Family         2  Contact Agent      Cheap  0.128128  \n",
       "4745         Bachelors         2  Contact Owner      Cheap -0.256004  "
      ]
     },
     "execution_count": 289,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4390c1b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на основные меры разброса, характеризующие наш датасет."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "d5171091",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "id": "9c29b12f",
   "metadata": {},
   "outputs": [],
   "source": [
    "price_data = pd.DataFrame(rents.groupby('city')['price'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "id": "62f1c9e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='city'>"
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "price_data.plot(kind = 'bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c8a16f0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Найдем размах для цены на квартиры."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "id": "fe8b8711",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3498800"
      ]
     },
     "execution_count": 305,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price.max() - rents.price.min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "107185ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Найдем интерквартильный размах - разница между 75 и 25 перцентилями."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "ce768bc2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23000.0"
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(rents.price, 75) - np.percentile(rents.price, 25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f02589b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Теперь посчитаем дисперсию и среднеквадратичное отклонение для нашего распределения."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "id": "6b76026e",
   "metadata": {},
   "outputs": [],
   "source": [
    "price_mean = rents.price.mean()\n",
    "deviations = rents.price - price_mean\n",
    "sq_deviations = deviations **2\n",
    "variance = sq_deviations.sum()/(len(rents.price)-1)\n",
    "std = np.sqrt(variance)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "id": "639ea5d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6100611741.939569, 78106.4129373483)"
      ]
     },
     "execution_count": 319,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "variance, std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "id": "a2534150",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6100611741.93965, 78106.41293734881)"
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price.var(), rents.price.std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3b42acce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Теперь посмотрим на наличие корреляций в датасете."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "id": "d101d9fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.36971757428049323"
      ]
     },
     "execution_count": 321,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price.corr(rents.rooms)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "id": "fb67f213",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='rooms', ylabel='price'>"
      ]
     },
     "execution_count": 322,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rents.plot('rooms', 'price', kind = 'scatter')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0762c09",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Как мы наблюдаем по коэффицианту корреляции и графику рассеяния, значимой корреляции между количеством комнат и\n",
    "# ценой квартиры в нашем датасете не наблюдается. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "id": "833cd40c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Посмотрим на корреляцию между ценой квартиры и ее площадью. Выдвигаем логичную гипотезу, что между размером \n",
    "# квартиры и ее ценой есть значимая корреляция - чем больше квартира, тем она дороже. Проверим на наших данных."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "id": "ce350325",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4135507582245194"
      ]
     },
     "execution_count": 332,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents.price.corr(rents['size'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "id": "99ff487b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='size', ylabel='price'>"
      ]
     },
     "execution_count": 329,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rents.plot('size', 'price', kind = 'scatter')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c5dc9ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Коэффициент корреляции больше, чем в случае комнат и цены квартиры, и на графике видна небольшая зависимость,\n",
    "# но коэффициент так же незначителен - меньше 0,5.\n",
    "# Скорее всего, большое количество однотипных по цене и размеру квартир не дает увидеть полную картину, которую\n",
    "# мы бы наблюдали в генеральной совокупности - всем рынке недвижимости Индии. В этом плане, можно сказать, что\n",
    "# наша выборка не репрезентативна."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7ef5081",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Сделаем визуализацию по всем дням датасета, а потом детальнее посмотрим на изменение цены на квартиры \n",
    "# в зависимости от месяца."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "id": "0a90d7fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      2022-05-18\n",
       "1      2022-05-13\n",
       "2      2022-05-16\n",
       "3      2022-07-04\n",
       "4      2022-05-09\n",
       "          ...    \n",
       "4741   2022-05-18\n",
       "4742   2022-05-15\n",
       "4743   2022-07-10\n",
       "4744   2022-07-06\n",
       "4745   2022-05-04\n",
       "Name: date, Length: 4746, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 338,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.to_datetime(rents['date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "id": "2bee94d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>rooms</th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "      <th>floor</th>\n",
       "      <th>area</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>furniture</th>\n",
       "      <th>tenant</th>\n",
       "      <th>bathroom</th>\n",
       "      <th>contact</th>\n",
       "      <th>price type</th>\n",
       "      <th>zscore</th>\n",
       "      <th>date month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-05-18</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>1100</td>\n",
       "      <td>Ground out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Bandel</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>2</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-05-13</td>\n",
       "      <td>2</td>\n",
       "      <td>20000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Phool Bagan, Kankurgachi</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.191982</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-05-16</td>\n",
       "      <td>2</td>\n",
       "      <td>17000</td>\n",
       "      <td>1000</td>\n",
       "      <td>1 out of 3</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Salt Lake City Sector 2</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Semi-Furnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.230395</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-07-04</td>\n",
       "      <td>2</td>\n",
       "      <td>10000</td>\n",
       "      <td>800</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Super Area</td>\n",
       "      <td>Dumdum Park</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors/Family</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.320026</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-05-09</td>\n",
       "      <td>2</td>\n",
       "      <td>7500</td>\n",
       "      <td>850</td>\n",
       "      <td>1 out of 2</td>\n",
       "      <td>Carpet Area</td>\n",
       "      <td>South Dum Dum</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Unfurnished</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>1</td>\n",
       "      <td>Contact Owner</td>\n",
       "      <td>Cheap</td>\n",
       "      <td>-0.352037</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  rooms  price  size            floor         area  \\\n",
       "0  2022-05-18      2  10000  1100  Ground out of 2   Super Area   \n",
       "1  2022-05-13      2  20000   800       1 out of 3   Super Area   \n",
       "2  2022-05-16      2  17000  1000       1 out of 3   Super Area   \n",
       "3  2022-07-04      2  10000   800       1 out of 2   Super Area   \n",
       "4  2022-05-09      2   7500   850       1 out of 2  Carpet Area   \n",
       "\n",
       "                   location     city       furniture            tenant  \\\n",
       "0                    Bandel  Kolkata     Unfurnished  Bachelors/Family   \n",
       "1  Phool Bagan, Kankurgachi  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "2   Salt Lake City Sector 2  Kolkata  Semi-Furnished  Bachelors/Family   \n",
       "3               Dumdum Park  Kolkata     Unfurnished  Bachelors/Family   \n",
       "4             South Dum Dum  Kolkata     Unfurnished         Bachelors   \n",
       "\n",
       "   bathroom        contact price type    zscore  date month  \n",
       "0         2  Contact Owner      Cheap -0.320026           5  \n",
       "1         1  Contact Owner      Cheap -0.191982           5  \n",
       "2         1  Contact Owner      Cheap -0.230395           5  \n",
       "3         1  Contact Owner      Cheap -0.320026           7  \n",
       "4         1  Contact Owner      Cheap -0.352037           5  "
      ]
     },
     "execution_count": 359,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents['date month'] = pd.to_datetime(rents['date']).dt.month\n",
    "rents.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "id": "5788f7d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6    1859\n",
       "5    1681\n",
       "7     978\n",
       "4     228\n",
       "Name: date month, dtype: int64"
      ]
     },
     "execution_count": 373,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rents['date month'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e946a0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Мы видим, что в нашей выборке присутствуют данные за апрель, май, июнь и июль 2022 года."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "id": "2fa82d9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents_sum = rents.groupby(rents['date'])['price'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "id": "99bbbe2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd306319820>]"
      ]
     },
     "execution_count": 378,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "ax.plot(rents_sum)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 382,
   "id": "6bbb2323",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents_sum = rents.groupby(rents['date month'])['price'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "id": "73f13327",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd304b3be50>]"
      ]
     },
     "execution_count": 383,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "ax.plot(rents_sum)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "id": "49eecce7",
   "metadata": {},
   "outputs": [],
   "source": [
    "rents_sum = rents.groupby(rents['date month'])['price'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "id": "e53c7c0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd30643a670>]"
      ]
     },
     "execution_count": 381,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(10,5))\n",
    "ax.plot(rents_sum)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d58a88a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Мы можем видеть, что за весь период наблюдений были значительные флюктуации средней цены на аренду,\n",
    "# но в целом, тенденция такова, что с апреля по июль цена стабильно росла, несмотря на то, что\n",
    "# самих объявлений об аренде стало меньше к июлю 2022."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
